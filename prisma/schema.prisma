generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model Account {
//   id                       String  @id @default(cuid())
//   userId                   String
//   type                     String
//   provider                 String
//   providerAccountId        String
//   refresh_token            String?
//   access_token             String?
//   expires_at               Int?
//   token_type               String?
//   scope                    String?
//   id_token                 String?
//   session_state            String?
//   refresh_token_expires_in Int?
//   user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@unique([provider, providerAccountId])
// }

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  password      String?
  createdAt     DateTime  @default(now())
  // accounts      Account[]
  sessions      Session[]
}

// model VerificationToken {
//   identifier String
//   token      String   @unique
//   expires    DateTime

//   @@unique([identifier, token])
// }

model Task {
  id              Int          @id @default(autoincrement())
  title           String
  content         String?
  importanceScore Int          @default(0)
  deadline        DateTime?
  status          TaskStatus   @default(TODO)
  category        TaskCategory
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}

enum TaskCategory {
  Defensive
  General
  Offensive
}

// enum UserRole {
//   USER
//   ADMIN
// }
